{"version":3,"sources":["components/dogcards/index.js","components/wrapper/index.js","components/nav/index.js","App.js","index.js"],"names":["Dogcard","props","className","alt","name","src","image","id","onClick","sortdogs","height","width","Wrapper","children","Score","style","color","textColor","msg","score","topscore","App","state","dogs","chosenDogID","includes","setState","push","console","log","newDogs","sort","a","b","Math","random","dog","this","map","key","Component","ReactDOM","render","document","getElementById"],"mappings":"kzEAoBeA,MAjBf,SAAiBC,GACf,OACI,yBAAKC,UAAU,YACb,yBAAKA,UAAU,QACb,yBACEC,IAAKF,EAAMG,KACXC,IAAKJ,EAAMK,MACXC,GAAIN,EAAMM,GACVC,QAAS,kBAAMP,EAAMQ,SAASR,EAAMM,KACpCG,OAAO,QAAQC,MAAM,Y,MCLlBC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCuB1BC,MAxBf,SAAeb,GACb,OACE,oCACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,aAEX,wBAAIA,UAAU,aAAd,eACA,6BAGA,uBAAGK,GAAG,MAAMQ,MAAO,CAAEC,MAAM,GAAD,OAAKf,EAAMgB,aAClChB,EAAMiB,KAGT,uBAAGX,GAAG,SAAN,UACUN,EAAMkB,MADhB,gBACoClB,EAAMmB,c,OC2DvCC,E,4MAtEbC,MAAQ,CACNH,MAAO,EACPC,SAAU,EACVF,IAAK,kBACLK,OACAC,YAAa,I,EAGff,SAAW,SAACF,GACV,IAAIiB,EAAc,EAAKF,MAAME,YAC7B,GAAIA,EAAYC,SAASlB,GACvB,EAAKmB,SAAS,CACZP,MAAO,EACPD,IAAK,QACLM,YAAa,GACbP,UAAW,cALf,CASEO,EAAYG,KAAKpB,GACjB,IAAIa,EAAW,EAAKE,MAAMF,SACtBD,EAAQ,EAAKG,MAAMH,MAIvB,GAHIK,EAAYC,SAASlB,IAAOa,IAAaD,GAC3C,EAAKO,SAAS,CAAEN,SAAUA,EAAW,EAAGD,MAAOA,EAAQ,IAE3C,KAAVA,EAGF,OAFA,EAAKO,SAAS,CAAER,IAAK,SAAUM,YAAa,GAAIP,UAAW,eAC3DW,QAAQC,IAAI,UAId,IAAIC,EAAUP,EAAKQ,MAAK,SAACC,EAAGC,GAAJ,OAAUC,KAAKC,SAAW,MAClD,EAAKT,SAAS,CACZP,MAAOA,EAAQ,EACfD,IAAK,WACLkB,IAAKN,EACLN,cACAP,UAAW,Y,uDAKP,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CACEE,MAAOkB,KAAKf,MAAMH,MAClBC,SAAUiB,KAAKf,MAAMF,SACrBF,IAAKmB,KAAKf,MAAMJ,IAChBD,UAAWoB,KAAKf,MAAML,YAKxB,kBAAC,EAAD,KACGoB,KAAKf,MAAMC,KAAKe,KAAI,SAAAf,GAAI,OACvB,kBAAC,EAAD,CACEd,SAAU,EAAKA,SACfF,GAAIgB,EAAKhB,GACTgC,IAAKhB,EAAKhB,GACVD,MAAOiB,EAAKjB,MACZH,IAAKoB,EAAKnB,gB,GA9DNoC,aCAlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.eff03777.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Dogcard(props) {\n  return (\n      <div className=\"col-sm-3\">\n        <div className=\"card\">\n          <img\n            alt={props.name}\n            src={props.image}\n            id={props.id}\n            onClick={() => props.sortdogs(props.id)}\n            height=\"200px\" width=\"auto\"\n          />\n        </div>\n      </div>\n\n  );\n}\n\nexport default Dogcard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return (\n    <>\n      <div className=\"jumbotron\" >\n        <div className=\"container\">\n          \n            <h1 className=\"display-4\">Clicky Game</h1>\n            <br />\n         \n          \n            <p id=\"msg\" style={{ color: `${props.textColor}` }}>\n              {props.msg}\n            </p>\n\n            <p id=\"score\">\n              Score: {props.score} | Topscore: {props.topscore}\n            </p>\n          \n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Score;\n","import React, { Component } from \"react\";\nimport Dogcard from \"./components/dogcards\";\nimport Wrapper from \"./components/wrapper\";\nimport Nav from \"./components/nav\";\nimport dogs from \"./dogs.json\";\n\nclass App extends Component {\n  state = {\n    score: 0,\n    topscore: 0,\n    msg: \"Click an image!\",\n    dogs,\n    chosenDogID: [],\n    \n  };\n  sortdogs = (id) => {\n    var chosenDogID = this.state.chosenDogID;\n    if (chosenDogID.includes(id)) {\n      this.setState({\n        score: 0,\n        msg: \"Nope!\",\n        chosenDogID: [],\n        textColor: \"black\",\n      });\n      return;\n    } else {\n      chosenDogID.push(id);\n      var topscore = this.state.topscore;\n      var score = this.state.score;\n      if (chosenDogID.includes(id) && topscore === score) {\n        this.setState({ topscore: topscore + 1, score: score + 1 });\n      }\n      if (score === 12) {\n        this.setState({ msg: \"Winner\", chosenDogID: [], textColor: \"green\" });\n        console.log(\"Winner\");\n        return;\n      }\n\n      var newDogs = dogs.sort((a, b) => Math.random() - 0.5);\n      this.setState({\n        score: score + 1,\n        msg: \"Correct!\",\n        dog: newDogs,\n        chosenDogID,\n        textColor: \"greem\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav\n          score={this.state.score}\n          topscore={this.state.topscore}\n          msg={this.state.msg}\n          textColor={this.state.textColor}\n        />\n\n        \n\n        <Wrapper>\n          {this.state.dogs.map(dogs => (\n            <Dogcard\n              sortdogs={this.sortdogs}\n              id={dogs.id}\n              key={dogs.id}\n              image={dogs.image}\n              alt={dogs.name}\n            />\n          ))}\n        </Wrapper>\n       \n      </div>\n    );\n  }\n}\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}